 -- ======================================= 
--     CREATE DATABASE AND SCHEMAS       =
-- =======================================
-- USE ROLE ACCOUNTADMIN;
-- DROP USER IF EXISTS SVC_DEPLOY;
-- DROP DATABASE IF EXISTS DEV_DB;
-- DROP DATABASE IF EXISTS ADM_CONTROL_DB;
-- DROP DATABASE IF EXISTS PRD_DB;
-- DROP DATABASE IF EXISTS QA_DB;
-- DROP WAREHOUSE IF EXISTS DEPLOYMENT_WH;
-- DROP ROLE IF EXISTS "DEPLOY_ROLE";

-- ADM_CONTROL_DB
USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS ADM_CONTROL_DB;

CREATE SCHEMA IF NOT EXISTS DEPLOY;

-- DEV
USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS DEV_DB;
USE DATABASE DEV_DB;
CREATE SCHEMA IF NOT EXISTS BRONZE;
CREATE SCHEMA IF NOT EXISTS SILVER;
CREATE SCHEMA IF NOT EXISTS GOLD;
 
-- QA
USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS QA_DB;
USE DATABASE QA_DB;
CREATE SCHEMA IF NOT EXISTS BRONZE;
CREATE SCHEMA IF NOT EXISTS SILVER;
CREATE SCHEMA IF NOT EXISTS GOLD;

-- PRD
USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS PRD_DB;
USE DATABASE PRD_DB;
CREATE SCHEMA IF NOT EXISTS BRONZE;
CREATE SCHEMA IF NOT EXISTS SILVER;
CREATE SCHEMA IF NOT EXISTS GOLD;
 
-- ======================================= 
--        CONNECT SNOWFLAKE TO GIT       =
-- =======================================
USE ROLE ACCOUNTADMIN;
USE DATABASE ADM_CONTROL_DB;
USE SCHEMA DEPLOY;
-- CREATE OR REPLACE SECRET GITHUB_SECRET
-- 	TYPE = PASSWORD
-- 	USERNAME = 'mtacker'   -- CHANGE THIS
-- 	PASSWORD = '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';  -- CHANGE THIS
 
-- CREATE OR REPLACE API INTEGRATION GITHUB_API_INTEGRATION
-- 	API_PROVIDER = GIT_HTTPS_API
-- 	API_ALLOWED_PREFIXES = ('https://github.com/mtacker')
-- 	ALLOWED_AUTHENTICATION_SECRETS = (GITHUB_SECRET)
-- 	ENABLED = TRUE;

-- CREATE OR REPLACE GIT REPOSITORY SNOWFLAKE_GIT_REPO
-- 	API_INTEGRATION = GITHUB_API_INTEGRATION
-- 	GIT_CREDENTIALS = GITHUB_SECRET
-- 	ORIGIN = 'https://github.com/mtacker/snowflake-cicd-demo';
 
 
-- CREATE OR REPLACE GIT REPOSITORY SNOWFLAKE_GIT_REPO
	-- API_INTEGRATION = GITHUB_API_INTEGRATION
	-- GIT_CREDENTIALS = GITHUB_SECRET
	-- ORIGIN = 'https://github.com/mtacker/snowflake-cicd-demo-single-account';

 
-- SHOW GIT REPOSITORIES;
 
-- DESCRIBE GIT REPOSITORY SNOWFLAKE_GIT_REPO;
-- ALTER GIT REPOSITORY SNOWFLAKE_GIT_REPO FETCH;
 
-- ======================================= 
--    CREATE SF OBJECTS FOR DEPLOYMENT   =
-- =======================================
 
-- 1. CREATE ROLE
USE ROLE SECURITYADMIN;
CREATE OR REPLACE ROLE DEPLOY_ROLE;
 
-- 2. CREATE USER
USE ROLE ACCOUNTADMIN;
-- CREATE OR REPLACE USER SVC_DEPLOY
-- PASSWORD = 'Mynew123!'
-- DEFAULT_ROLE = ACCOUNTADMIN;
 
-- -- 3. CREATE WAREHOUSE
-- USE ROLE SYSADMIN;
-- CREATE OR REPLACE WAREHOUSE DEPLOYMENT_WH
-- COMMENT = 'For deployment purposes' 
-- WAREHOUSE_SIZE = 'Small'
-- WAREHOUSE_TYPE = 'STANDARD'
-- AUTO_RESUME = true
-- AUTO_SUSPEND = 60
-- MIN_CLUSTER_COUNT = 1 
-- MAX_CLUSTER_COUNT = 1 ;
 
-- 4. GRANT PRIVILEGES
USE WAREHOUSE ADM_CONTROL_DB_WH;

USE ROLE SECURITYADMIN;
GRANT  ROLE ACCOUNTADMIN TO USER SVC_DEPLOY;
-- GENERAL
GRANT ROLE DEPLOY_ROLE TO USER SVC_DEPLOY;
GRANT ROLE DEPLOY_ROLE TO ROLE SYSADMIN;
USE ROLE SYSADMIN;
GRANT USAGE ON WAREHOUSE DEPLOYMENT_WH TO ROLE DEPLOY_ROLE;
GRANT USAGE ON DATABASE ADM_CONTROL_DB TO ROLE DEPLOY_ROLE;
GRANT USAGE ON ALL SCHEMAS in DATABASE ADM_CONTROL_DB TO ROLE DEPLOY_ROLE;

USE ROLE SECURITYADMIN;
-- DEV_DB
GRANT USAGE ON DATABASE DEV_DB TO ROLE DEPLOY_ROLE;
GRANT USAGE ON ALL SCHEMAS IN DATABASE DEV_DB TO ROLE DEPLOY_ROLE;
GRANT ALL ON ALL SCHEMAS IN DATABASE DEV_DB TO ROLE DEPLOY_ROLE;     -- CURRENT
GRANT ALL ON ALL TABLES IN DATABASE DEV_DB TO ROLE DEPLOY_ROLE;      -- CURRENT
GRANT ALL ON ALL VIEWS IN DATABASE DEV_DB TO ROLE DEPLOY_ROLE;       -- CURRENT
GRANT ALL ON FUTURE SCHEMAS IN DATABASE DEV_DB TO ROLE DEPLOY_ROLE;  -- FUTURE
GRANT ALL ON FUTURE TABLES IN DATABASE DEV_DB TO ROLE DEPLOY_ROLE;   -- FUTURE
GRANT ALL ON FUTURE VIEWS IN DATABASE DEV_DB TO ROLE DEPLOY_ROLE;    -- FUTURE
 
-- QA_DB
GRANT USAGE ON DATABASE QA_DB TO ROLE DEPLOY_ROLE;
GRANT USAGE ON ALL SCHEMAS IN DATABASE QA_DB TO ROLE DEPLOY_ROLE;
GRANT ALL ON ALL SCHEMAS IN DATABASE QA_DB TO ROLE DEPLOY_ROLE;     -- CURRENT
GRANT ALL ON ALL TABLES IN DATABASE QA_DB TO ROLE DEPLOY_ROLE;      -- CURRENT
GRANT ALL ON ALL VIEWS IN DATABASE QA_DB TO ROLE DEPLOY_ROLE;       -- CURRENT
GRANT ALL ON FUTURE SCHEMAS IN DATABASE QA_DB TO ROLE DEPLOY_ROLE;  -- FUTURE
GRANT ALL ON FUTURE TABLES IN DATABASE QA_DB TO ROLE DEPLOY_ROLE;   -- FUTURE
GRANT ALL ON FUTURE VIEWS IN DATABASE QA_DB TO ROLE DEPLOY_ROLE;    -- FUTURE
 
-- PRD_DB
GRANT USAGE ON DATABASE PRD_DB TO ROLE DEPLOY_ROLE;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PRD_DB TO ROLE DEPLOY_ROLE;
GRANT ALL ON ALL SCHEMAS IN DATABASE PRD_DB TO ROLE DEPLOY_ROLE;     -- CURRENT
GRANT ALL ON ALL TABLES IN DATABASE PRD_DB TO ROLE DEPLOY_ROLE;      -- CURRENT
GRANT ALL ON ALL VIEWS IN DATABASE PRD_DB TO ROLE DEPLOY_ROLE;       -- CURRENT
GRANT ALL ON FUTURE SCHEMAS IN DATABASE PRD_DB TO ROLE DEPLOY_ROLE;  -- FUTURE
GRANT ALL ON FUTURE TABLES IN DATABASE PRD_DB TO ROLE DEPLOY_ROLE;   -- FUTURE
GRANT ALL ON FUTURE VIEWS IN DATABASE PRD_DB TO ROLE DEPLOY_ROLE;    -- FUTURE
 
 SHOW GRANTS TO ROLE DEPLOY_ROLE;
 
-- REPO
GRANT ROLE ACCOUNTADMIN TO USER SVC_DEPLOY;
USE ROLE ACCOUNTADMIN;
USE DATABASE ADM_CONTROL_DB;
USE SCHEMA DEPLOY;
GRANT READ,WRITE ON GIT REPOSITORY SNOWFLAKE_GIT_REPO TO ROLE DEPLOY_ROLE; 
GRANT USAGE ON SECRET GITHUB_SECRET TO ROLE DEPLOY_ROLE;
USE ROLE DEPLOY_ROLE;

 
-- ======================================= 
--              CLEANUP                  =
-- =======================================
-- DROP ROLE DEPLOY_ROLE;
-- DROP USER SVC_DEPLOY;
-- DROP WAREHOUSE DEPLOYMENT_WH;
 
-- DROP SECRET GITHUB_SECRET;
-- DROP API INTEGRATION GITHUB_API_INTEGRATION;
-- DROP GIT REPOSITORY SNOWFLAKE_GIT_REPO;
 